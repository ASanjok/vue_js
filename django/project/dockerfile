# FROM python:3.11-slim
# RUN apt-get update && apt-get install -y gdal-bin
# ARG CPLUS_INCLUDE_PATH=/usr/include/gdal
# ARG C_INCLUDE_PATH=/usr/include/gdal
# # work directory
# WORKDIR /app

# # use requirements file
# COPY requirements.txt .
# RUN pip install --no-cache-dir -r requirements.txt
# RUN pip install psycopg2-binary

# # copy full project
# COPY . .
# RUN python manage.py makemigrations
# RUN python manage.py migrate

# EXPOSE 8000

# # commands to start app

# CMD ["python", "manage.py", "runserver", "0.0.0.0:8000"]


FROM python:3.11-slim

# Устанавливаем зависимости
RUN apt-get update && apt-get install -y gdal-bin supervisor

ARG CPLUS_INCLUDE_PATH=/usr/include/gdal
ARG C_INCLUDE_PATH=/usr/include/gdal

# work directory
WORKDIR /app

# Копируем requirements файл и устанавливаем зависимости
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt
RUN pip install psycopg2-binary

# Копируем проект в контейнер
COPY . .

# Выполняем миграции
RUN python manage.py makemigrations
RUN python manage.py migrate

# Создаем директорию для логов supervisor
RUN mkdir -p /var/log/supervisor

# Копируем конфигурационный файл supervisor
COPY supervisord.conf /etc/supervisor/supervisord.conf

# Открываем порт для Django
EXPOSE 8000

# Запускаем supervisor, который будет управлять как Django сервером, так и Celery
CMD ["/usr/bin/supervisord"]
